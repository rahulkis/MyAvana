<form id="msform">
    <fieldset id="divWelcome">
        <div class="fieldset-heading">
            <h3>Welcome to your virtual consulation!</h3>
        </div>
        <div class="fieldset-body">
            <p>
                We're going to walk you through the setup one step at a time. The consultation will not start until you are ready.

            </p>
        </div>
        <input type="button" name="next" id="btnWelcomeNext" class="next action-button m-auto" value="Continue" />
    </fieldset>
    <fieldset id="divGrantAccess">
        <div class="fieldset-heading">
            <h3> Grant Myavana required permissions.</h3>
        </div>
        <div class="fieldset-body">
            <p class="mb-0">
                <i class="fa fa-rss" aria-hidden="true"></i> In order to stream audio and video, we'll need access to your media devices.
            </p>
            <hr>
            <p>
                <i class="fa fa-check-circle-o" aria-hidden="true"></i> Do you give Myavana permissions to use your camera and microphone?
            </p>
        </div>
        <input type="button" name="previous" id="btnGrantBack" class="previous action-button back_btn" onclick="Back()" value="Back" />
        <input type="button" name="next" id="btnGrantNext" class="next action-button next_btn" onclick="CheckCameraSupport()" value="Yes" />
    </fieldset>
    <fieldset id="divBestPractices">
        <div class="fieldset-heading">
            <h3>Consultation Best Practices</h3>
        </div>
        <div class="fieldset-body">
            <p>
                We are about to walk you through our recommendations to ensure you have the smoothest experience possible.
            </p>
        </div>
        <input type="button" name="next" id="btnPracticesNext" class="next action-button m-auto" value="Continue" />
    </fieldset>
    <fieldset id="divUseHeadphones">
        <div class="fieldset-body">
            <p class="mb-2 circle-icon">
                <i class="fa fa-headphones" aria-hidden="true"></i>
            </p>
            <h3 class="text-white">Use Headphones</h3>
            <p>
                We suggest using headphones during your consultation to avoid echoing and feedback to achieve the best sound quality.

            </p>
            <p class="internal-box mb-0">
                <span><input class="w-auto" id="chkUncheck" type="checkbox" onchange="CheckStatus(this)" /> </span>Please confirm you understand by checking this box
                <i class="d-block">(may result in echoing if you're not using headphones)</i>
            <p>
        </div>
        <input type="button" name="previous" id="btnHeadphoneBack" class="previous action-button back_btn" value="Back" />
        <input type="button" name="next" id="btnHeadphoneNext" class="next action-button next_btn" value="Continue" />
    </fieldset>
    <fieldset id="divMediaSuccess">
        <div class="fieldset-heading">
            <h3>
                Successfully connected to your media devices!
            </h3>
        </div>
        <div class="fieldset-body">
            <p class="mb-2 circle-icon">
                <i class="fa fa-video-camera " aria-hidden="true"></i>
                <i class="fa fa-microphone " aria-hidden="true"></i>
            </p>
            <p class="mb-0">
                Next we'll configure which camera and microphone you will be using.
            <p>
        </div>
        <input type="button" name="previous" id="btnMediaBack" class="previous action-button back_btn" value="Back" />
        <input type="button" name="next" id="btnMediaNext" class="next action-button next_btn" value="Continue" onclick="SelectCamera()" />

    </fieldset>
    <fieldset id="divCameraAccess">
        <div class="fieldset-heading">
            <h3>
                Select a camera
            </h3>
        </div>
        <div class="fieldset-body">
            <div class="select w-100">
                <p class="mb-2 circle-icon">
                    <i class="fa fa-video-camera" aria-hidden="true"></i>
                </p>
                <p class="mb-2">Choose the camera you would like to use </p>
                <select id="videoSource" class="input-style" onchange="SelectCamera()"></select>
            </div>
            <div id="local-media-container-id"></div>
            @*<video id="video" playsinline autoplay controls class="mb-3 mt-2 w-100"></video>*@
        </div>
        <input type="button" name="previous" id="btnCameraBack" class="previous action-button back_btn" value="Back" />
        <input type="button" name="next" id="btnCameraNext" class="next action-button next_btn" value="Continue" onclick="StopCamera()" />

    </fieldset>
    <fieldset id="divMicrophoneAccess">
        <div class="fieldset-heading">
            <h3>
                Select a microphone
            </h3>
        </div>
        <div class="fieldset-body">

            <div class="select w-100">
                <p class="mb-2 circle-icon">
                    <i class="fa fa-microphone" aria-hidden="true"></i>
                </p>
                <p class="mb-2">Choose the microphone you would like to use </p>

            </div>

            <div class="audio-block-1">
                <div id="audio-div" class="microphone-canvas">
                    <select id="audioSource" class="input-style mb-3"></select>
                    <p id="audio-info"></p>
                    <canvas id="audio-canvas" class="audio_canvas" width="458" height="164"></canvas>
                </div>
            </div>

            <div class="select w-100" style="display:none">
                <p>Audio output destination: </p><select id="audioOutput" class="input-style  mb-3"></select>
            </div>
        </div>
        <input type="button" name="previous" id="btnMicrophoneBack" class="previous action-button back_btn" value="Back" />
        <input type="button" name="next" id="btnMicrophoneNext" class="next action-button next_btn" value="Continue" onclick="JoinInterviewCandidate()"/>
    </fieldset>
    <fieldset id="divJoinInterviewCandidate">
        <div class="fieldset-heading">
            <h3>
                Consultation Started
            </h3>
        </div>
        <div class="fieldset-body">
            @Html.Partial("_JoinCustomerConsultation")
        </div>
    </fieldset>
   </form>
    <script type="text/javascript">
        const Video = Twilio.Video;
        var videoElementTwilio;
        var localVideoTrackCamera;
        var localAudioTrack;
        var ArrayLocalTracks;

        function SelectCamera() {

            if (ArrayLocalTracks != undefined) {
                ArrayLocalTracks.forEach(function (track) {
                    track.stop();
                });
            }
            var videoCameraSelectedDevice = document.querySelector('select#videoSource');

            Video.createLocalTracks({ audio: false, video: { deviceId: videoCameraSelectedDevice.value } }).then(function (localTracks) {

                localTracks.forEach(function (track) {
                    console.log(`local media div`);
                    ArrayLocalTracks = localTracks;
                    const localMediaContainer = document.getElementById('local-media-container-id');
                    localMediaContainer.innerHTML = "";
                    localMediaContainer.appendChild(track.attach());

                    var video = $("#local-media-div video");
                    video.attr("height", "120px");
                });
            });

        }
        function StopCamera() {
            ArrayLocalTracks.forEach(function (track) {
                track.stop();
            });
        }


        function attachSinkIdTwilio(element, sinkId) {
            if (typeof element.sinkId !== 'undefined') {
                element.setSinkId(sinkId)
                    .then(() => {
                        console.log(`Success, audio output device attached: ${sinkId}`);
                    })
                    .catch(error => {
                        let errorMessage = error;
                        if (error.name === 'SecurityError') {
                            errorMessage = `You need to use HTTPS for selecting audio output device: ${error}`;
                        }
                        console.error(errorMessage);
                        // Jump back to first output device in the list as it's the default.
                        audioOutputSelect.selectedIndex = 0;
                    });
            } else {
                console.warn('Browser does not support output device selection.');
            }
        }
    </script>
    <script>


        //jQuery time
        var current_fs, next_fs, previous_fs; //fieldsets
        var left, opacity, scale; //fieldset properties which we will animate
        var animating; //flag to prevent quick multi-click glitches

        $(".next").click(function () {

            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            next_fs = $(this).parent().next();

            //activate next step on progressbar using the index of next_fs
            $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

            //show the next fieldset
            next_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale current_fs down to 80%
                    scale = 1 - (1 - now) * 0.2;
                    //2. bring next_fs from the right(50%)
                    left = (now * 50) + "%";
                    //3. increase opacity of next_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({
                        'transform': 'scale(' + scale + ')',
                        'position': 'absolute'
                    });
                    next_fs.css({ 'left': left, 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });

        $(".previous").click(function () {
            if (animating) return false;
            animating = true;

            current_fs = $(this).parent();
            previous_fs = $(this).parent().prev();

            //de-activate current step on progressbar
            $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

            //show the previous fieldset
            previous_fs.show();
            //hide the current fieldset with style
            current_fs.animate({ opacity: 0 }, {
                step: function (now, mx) {
                    //as the opacity of current_fs reduces to 0 - stored in "now"
                    //1. scale previous_fs from 80% to 100%
                    scale = 0.8 + (1 - now) * 0.2;
                    //2. take current_fs to the right(50%) - from 0%
                    left = ((1 - now) * 50) + "%";
                    //3. increase opacity of previous_fs to 1 as it moves in
                    opacity = 1 - now;
                    current_fs.css({ 'left': left });
                    previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity });
                },
                duration: 800,
                complete: function () {
                    current_fs.hide();
                    animating = false;
                },
                //this comes from the custom easing plugin
                easing: 'easeInOutBack'
            });
        });



    </script>

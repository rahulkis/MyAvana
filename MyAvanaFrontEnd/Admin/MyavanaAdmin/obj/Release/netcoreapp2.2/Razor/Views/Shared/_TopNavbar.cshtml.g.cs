#pragma checksum "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Shared\_TopNavbar.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e13e70f093fed475641a9aecbb337a3b8b0b2b0c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__TopNavbar), @"mvc.1.0.view", @"/Views/Shared/_TopNavbar.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/_TopNavbar.cshtml", typeof(AspNetCore.Views_Shared__TopNavbar))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\_ViewImports.cshtml"
using MyavanaAdmin;

#line default
#line hidden
#line 2 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\_ViewImports.cshtml"
using MyavanaAdmin.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e13e70f093fed475641a9aecbb337a3b8b0b2b0c", @"/Views/Shared/_TopNavbar.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e50bf59ee35ef0f48e0d229ad9de8458361f9630", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__TopNavbar : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("role", new global::Microsoft.AspNetCore.Html.HtmlString("search"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("navbar-form-custom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/loader.gif"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Shared\_TopNavbar.cshtml"
  

    var userId = Convert.ToInt32(HttpContextAccessor.HttpContext.Request.Cookies["UserId"]);

#line default
#line hidden
            BeginContext(181, 3068, true);
            WriteLiteral(@"<style>
    .alert-successNav, .alert-dangerNav, .alert-info {
        top: 64px !important;
        width: 40% !important;
        margin: 0 auto;
        z-index: 99;
        position: fixed;
        left: 56%;
        transform: translateX(-40%);
        text-align: center;
        padding: 12px;
        transition: all 1s linear;
        box-shadow: 0px 0px 12px 3px rgba(0, 0, 0, 0.2);
        font-size: 16px;
    }

    .alert-dangerNav {
        color: #80172a;
        background-color: #fdd5dc;
        border-color: #fcc4ce;
    }

        .alert-dangerNav hr {
            border-top-color: #fbacba;
        }

    .alert-danger .alert-link {
        color: #550f1c;
    }

    .alert-successNav {
        color: #1c6356;
        background-color: #a8ffc3;
        border-color: #13b755;
    }

        .alert-successNav hr {
            border-top-color: #b4e7dd;
        }

        .alert-successNav .alert-link {
            color: #113b33;
        }

    .preloa");
            WriteLiteral(@"der {
        width: calc(100% - 200px);
        height: 100%;
        top: 0px;
        position: fixed;
        z-index: 99999;
        background: rgba(255, 255, 255, .8);
    }

        .preloader img {
            position: absolute;
            LEFT: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 80px;
        }

    .loader {
        overflow: visible;
        padding-top: 2em;
        height: 0;
        width: 2em;
    }

    span.align-right {
        text-align: right;
    }

    .notification-popup {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 440px;
        box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
        padding: 12px;
        z-index: 1;
        right: 50%;
        top: 28px;
        max-height: 300px;
        overflow-y: auto;
        transform: translateX(50%);
    }

    .notification-icon {
        position: relative;
        display: ");
            WriteLiteral(@"inline-block;
        cursor: pointer;
    }

    .notification-popup:before {
        content: """";
        width: 10px;
        height: 10px;
        position: absolute;
        top: -4px;
        right: 50%;
        border-top: 5px solid #676a6c;
        border-left: 5px solid #676a6c;
        border-bottom: 5px solid transparent;
        border-right: 5px solid transparent;
        transform: rotate(-135deg);
    }

    .notification-popup thead tr th {
        white-space: nowrap;
        text-align: left;
        padding: 6px !important;
        border-bottom: 1px solid #ddd;
    }

    .notification-popup tbody tr td {
        white-space: normal;
        text-align: left;
        padding: 6px;
    }

    .notification-popup tbody tr:nth-child(odd) td {
        background: #ffefef;
    }
</style>
<div class=""row border-bottom"">
    <nav class=""navbar navbar-static-top"" role=""navigation"" style=""margin-bottom: 0"">
        <div class=""navbar-header"">

            ");
            EndContext();
            BeginContext(3249, 160, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e13e70f093fed475641a9aecbb337a3b8b0b2b0c8851", async() => {
                BeginContext(3320, 82, true);
                WriteLiteral("\r\n                <div class=\"form-group\">\r\n\r\n                </div>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3409, 280, true);
            WriteLiteral(@"
        </div>
        <ul class=""nav navbar-top-links navbar-right"">
            <li style=""padding:20px"">
                <span class=""m-r-sm text-muted welcome-message"" data-i18n=""topnav.welcometext"">Welcome to  <span id=""lblPortalName""></span></span>
            </li>
");
            EndContext();
#line 145 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Shared\_TopNavbar.cshtml"
             if (HttpContextAccessor.HttpContext.Request.Cookies["UserTypeId"].ToString() == "1")
            {

#line default
#line hidden
            BeginContext(3803, 271, true);
            WriteLiteral(@"                <li>
                    <div id=""notificationIcon"" class=""notification-icon"" onclick=""OpenNotificationModal()"">
                        <a id=""notificationLink"">
                            <i class=""fa fa-bell""></i>
                            <span");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 4074, "\"", 4082, 0);
            EndWriteAttribute();
            BeginContext(4083, 531, true);
            WriteLiteral(@" style=""color: red;"" id=""notificationCount""></span>
                        </a>
                        <div id=""notificationPopup"" class=""notification-popup"" onclick=""stopPropagation(event)"">
                            <table>
                                <!--<thead id=""tableHead"">
                        <tr>
                            <th style=""padding: 10px;"">User</th>
                            <th style=""padding: 10px;"">Salon</th>
                            <th style=""padding: 10px;"">CreatedOn</th>-->
");
            EndContext();
            BeginContext(4696, 408, true);
            WriteLiteral(@"                                <!--</tr>
                        </thead>-->
                                <tbody id=""tBodyNot""></tbody>
                            </table>
                            <div id=""noNotificationMessage"" style=""display: none; padding: 10px; text-align: center;"">No notifications</div>
                        </div>
                    </div>

                </li>
");
            EndContext();
            BeginContext(5106, 321, true);
            WriteLiteral(@"                <li>
                    <div id=""hairDiaryNotificationIcon"" class=""notification-icon"" onclick=""OpenHairDiaryNotificationModal()"">
                        <a id=""notificationLink"">
                            <i class=""fa fa-book"" title=""Hair Diary notification""></i>
                            <span");
            EndContext();
            BeginWriteAttribute("class", " class=\"", 5427, "\"", 5435, 0);
            EndWriteAttribute();
            BeginContext(5436, 607, true);
            WriteLiteral(@" style=""color: red;"" id=""hairDiaryNotificationCount""></span>
                        </a>
                        <div id=""hairDiaryNotificationPopup"" class=""notification-popup"" onclick=""stopHairDiaryPropagation(event)"">
                            <table>
                                <tbody id=""tHairDiaryBodyNot""></tbody>
                            </table>
                            <div id=""noHairDiaryNotificationMessage"" style=""display: none; padding: 10px; text-align: center;"">No notifications</div>
                        </div>
                    </div>

                </li>
");
            EndContext();
#line 186 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Shared\_TopNavbar.cshtml"

            }

#line default
#line hidden
            BeginContext(6060, 312, true);
            WriteLiteral(@"
            <li>
                <a class=""togglemenu"" href=""#""><i class=""fa fa-bars""></i> </a>
            </li>
            <li>
                <a onclick=""OpenChangePassword()"">
                    <i class=""fa fa-tasks""></i> Reset Password
                </a>
            </li>
            <li>
");
            EndContext();
            BeginContext(6434, 143, true);
            WriteLiteral("                <a onclick=\"logout()\">\r\n                    <i class=\"fa fa-sign-out\"></i> Log out\r\n                </a>\r\n            </li>\r\n\r\n");
            EndContext();
            BeginContext(6723, 669, true);
            WriteLiteral(@"        </ul>
    </nav>
</div>
<div id=""alert-successNav"" class=""alert alert-successNav alert-dismissible"" style=""display:none; width:50%"" data-keyboard=""false"" data-backdrop=""static"">
    <a href=""#"" class=""close"" data-dismiss=""alert"" aria-label=""close"">&times;</a>
    <span id=""successMessageNav""></span>
</div>
<div class=""alert alert-dangerNav alert-dismissible"" style=""display:none; width:50%"" data-keyboard=""false"" data-backdrop=""static"">
    <a href=""#"" class=""close"" data-dismiss=""alert"" aria-label=""close"">&times;</a>
    <span id=""failureMessageNav""></span>
</div>
<div class=""preloader"" style=""display:none;"">
    <div class=""loader"">
        ");
            EndContext();
            BeginContext(7392, 33, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "e13e70f093fed475641a9aecbb337a3b8b0b2b0c15990", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7425, 3220, true);
            WriteLiteral(@"
    </div>
</div>
<div class=""modal fade"" id=""resetAdminPassword"" tabindex=""-1"" role=""dialog"" aria-labelledby=""resetAdminPassword"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 id=""headerText"" class=""font-bold"">Reset Password</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body p-3"">
                <div class=""row"">
                    <div class=""col-lg-12"">
                        <label class=""w-100"">New Password*:</label>
                    </div>
                    <div class=""col-lg-12 mb-3"">
                        <div class=""field-style "">
                            <div class3=""wrap-input100 login-form-style border-0"">
                ");
            WriteLiteral(@"                <input type=""password"" autocomplete=""off"" id=""txtNewAdminPassword"" class=""p-2 w-100"">
                                <span class=""text-danger mt-2 d-block"" id=""newPassValidation"">
                                    <span id=""newPassErr""></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-lg-12 "">
                        <label class=""w-100"">Confirm Password*:</label>
                    </div>
                    <div class=""col-lg-12 mb-3"">
                        <div class=""field-style "">
                            <div class=""wrap-input100 login-form-style border-0"">
                                <input type=""password"" autocomplete=""off"" id=""txtConfirmAdminPassword"" class=""p-2 w-100"">
                                <span class=""text-danger"" id=""confirmPassValidation"">
                    ");
            WriteLiteral(@"                <span id=""confirmPassErr""></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" id=""savePassword"" onclick=""resetAdminPassword()"">Save</button>
                <button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""NotificationModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""NotificationModal"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 id=""headerText"" class=""font-bold"">Notification</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
  ");
            WriteLiteral("                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body p-3\">\r\n");
            EndContext();
            BeginContext(12382, 3388, true);
            WriteLiteral(@"            </div>

        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var userTypeId = getCookie(""UserTypeId"");
        if (userTypeId == ""2"") {
            var salon = getCookie(""SalonName"");
            document.getElementById('lblPortalName').innerHTML = salon +"" Portal"";
        }
        else {
            document.getElementById('lblPortalName').innerHTML = ""MyAvana Admin"";
        }
        var userTypeId = getCookie(""UserTypeId"");
        if (userTypeId == 1) {
            getNotificationCount();
            getHairDiaryNotificationCount();
        }
        //var count = getCookie(""StrandUploadNotificationCount"");
        //document.getElementById('notificationCount').innerHTML = count;

    });
    function getCookie(cname) {
        let name = cname + ""="";
        let decodedCookie = decodeURIComponent(document.cookie);
        let ca = decodedCookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];");
            WriteLiteral(@"
            while (c.charAt(0) == ' ') {
                c = c.substring(1);
            }
            if (c.indexOf(name) == 0) {
                return c.substring(name.length, c.length);
            }
        }
        return """";
    }
    function logout() {
        $.ajax({
            type: ""GET"",
            url: ""/Auth/Logout"",
            success: function (response) {
                window.location.href = ""../Auth/Login"";
            },
            failure: function (response) {
            },
            error: function (response) {
            }
        });
    }

    $('.togglemenu').click(function () {

        var data = $('.navbar-static-side').is("":visible"");
        if (data)
            $('.navbar-static-side').css('display', 'none');
        else
            $('.navbar-static-side').css('display', 'block');
    });
    function OpenChangePassword() {
        clearResetPasswordValues();
        $('#resetAdminPassword').modal('show');

    }
    function");
            WriteLiteral(@" clearResetPasswordValues() {
        validMessage = true;
        $('#txtNewAdminPassword').val("""");
        $('#txtConfirmAdminPassword').val("""");
        $(""#newPassErr"").text("""");
        $(""#confirmPassErr"").text("""");
        $(""#newPassValidation"").removeClass(""field-validation-error"");
        $(""#confirmPassValidation"").removeClass(""field-validation-error"");
    }
    function resetAdminPassword() {

        validMessage = true;

        if ($('#txtNewAdminPassword').val() == '') {
            $(""#newPassValidation"").addClass(""field-validation-error"");
            $(""#newPassErr"").text(""New password required."");
            validMessage = false;
        }
        if ($('#txtConfirmAdminPassword').val() == '') {
            $(""#confirmPassValidation"").addClass(""field-validation-error"");
            $(""#confirmPassErr"").text(""Confirm password required."");
            validMessage = false;
        }
        if (!validMessage) {
            return false;
        }
        if ($('");
            WriteLiteral(@"#txtNewAdminPassword').val() != $('#txtConfirmAdminPassword').val()) {
            $(""#confirmPassValidation"").addClass(""field-validation-error"");
            $(""#confirmPassErr"").text(""Passwords did not match."");
            return false;
        }
        var passwordData = {};
        passwordData.UserId= ");
            EndContext();
            BeginContext(15771, 6, false);
#line 412 "E:\Work2023\October2023\MyAvana\MyAvanaAdminV2\MyavanaAdmin\MyavanaAdmin\Views\Shared\_TopNavbar.cshtml"
                        Write(userId);

#line default
#line hidden
            EndContext();
            BeginContext(15777, 10764, true);
            WriteLiteral(@";
        passwordData.Password= $('#txtNewAdminPassword').val();
        $('.preloader').css('display', 'block');
        $.ajax({
            type: ""POST"",
            url: ""/Auth/ResetPassword"",
            data: JSON.stringify(passwordData),
            processData: false,
            contentType: ""application/json"",
            dataType: 'json',
            success: function (response) {
                if (response == ""1"") {
                    $('#successMessageNav').text(""Password reset successfully !"");
                    $('.alert-successNav').css(""display"", ""block"");
                    $('.alert-successNav').delay(3000).fadeOut();
                    $('#resetAdminPassword').modal('hide');
                }
                else {
                    $('#failureMessageNav').text(""Oops something goes wrong !"");
                    $('.alert-dangerNav').css(""display"", ""block"");
                    $('.alert-dangerNav').delay(3000).fadeOut();
                    $('#resetAdminPas");
            WriteLiteral(@"sword').modal('hide');
                }
                $('.preloader').css('display', 'none');
            },
        });
    }

    $(document).keypress(function (e) {
        if (e.which == 13 && $('#resetAdminPassword').hasClass('show')) {
            resetAdminPassword();
        }
    });
    document.addEventListener('click', function (event) {
        var notificationIcon = document.getElementById(""notificationIcon"");
        var notificationPopup = document.getElementById(""notificationPopup"");
        if (notificationIcon && notificationPopup) {
            if (!notificationIcon.contains(event.target) && !notificationPopup.contains(event.target)) {
                notificationPopup.style.display = ""none"";
            }
        }
    });
    function getNotificationList() {
        $('#tBodyNot').html('');
        $.ajax({
            type: ""GET"",
            url: ""/HairProfile/GetHairStrandUploadNotificationList"",
            success: function (response) {
                ");
            WriteLiteral(@"$('#tBodyNot').html('');
               // var tableHead = document.getElementById('tableHead');
                var noNotificationMessage = document.getElementById('noNotificationMessage');
                if (response.recordsTotal > 0) {
                    var count = response.recordsTotal
                    document.getElementById('notificationCount').innerHTML = response.recordsTotal;
                   // setSessionCookie(""StrandUploadNotificationCount"", response.recordsTotal);
                   // tableHead.style.display = 'table-row';
                    noNotificationMessage.style.display = 'none';
                   /* document.getElementById('notificationCount').style.display = 'block';*/
                }
                else {

                   // tableHead.style.display = 'none';
                    noNotificationMessage.style.display = 'block';
                }
                for (var d in response.data) {
                    var data = response.data[d];
                ");
            WriteLiteral(@"    //console.log(data)
                    //var idLink = $('<a>', {
                    //    href: '#',
                    //    class: 'link-button',
                    //    title: 'Mark as read',
                    //    click: function (e) {
                    //        e.stopPropagation();
                    //        MarkAsRead(data.id, this);
                    //    }
                    //})
                    //.append($('<i>', { class: 'fa fa-check-circle ml-2 text-danger' }));

                    $('#tBodyNot').append($('<tr>')
                        .append($('<td onclick=redirectTo(\'' + data.userId + '\',' + data.hairProfileId +')>New image uploaded by ' + data.salonName + ' for ' + data.userName + ' on ' + data.createdDate +' </td>'))
                        //.append($('<td>', { text: data.salonName }))
                        //.append($('<td>', { text: data.createdDate }))
                        /*.append($('<td>').append(idLink))*/
                        .app");
            WriteLiteral(@"end($('<td>').append('<a href=""javascript:;"" onclick=MarkAsRead('+ data.id +') class=""link-button"" title=""Mark as read"" ><i class=""fa fa-check-circle ml-2 text-danger""></i> </a>'))
                        .append($('</tr>'))
                    )
                }

            },
            error: function (response) {

            },
            complete: function () {

            }
        });

    }
    function OpenNotificationModal() {
        var popup = document.getElementById(""notificationPopup"");
        if (popup.style.display === ""none"" || popup.style.display === """") {
            getNotificationList();
            popup.style.display = ""block"";
        }
        else {
            popup.style.display = ""none"";

        }
    }

    function stopPropagation(event) {
        event.stopPropagation();
    }
    function MarkAsRead(id, element) {
        var notification = {
            Id: id,
        }
        $('.preloader').css('display', 'block');
        $.aja");
            WriteLiteral(@"x({
            type: ""POST"",
            url: ""/HairProfile/UpdateNotificationAsRead"",
            data: notification,
            success: function (response) {
                if (response == ""1"") {
                    getNotificationCount();
                    getNotificationList();
                }
                else {

                }

                $('.preloader').css('display', 'none');
            },
        });
    }
    function setSessionCookie(name, value) {
        document.cookie = name + ""="" + (value || """") + "";path=/"";
    }
    function changeIconColor(id, element) {

        element.querySelector('i').classList.remove('text-danger');
        element.querySelector('i').classList.add('text-success');
    }

    function redirectTo(userId, hairProfileId) {
        window.location.href = ""/HairProfile/CustomerHairProfile?id="" + userId + ""&&hairProfileId="" + hairProfileId;
    }

    function getNotificationCount() {
            $.ajax({
                ty");
            WriteLiteral(@"pe: ""Get"",
                url: ""/Auth/GetHairStrandNotificationCount"",
                success: function (response) {
                    if (response > 0) {
                        document.getElementById('notificationCount').innerHTML = response;
                    }
                    else {
                        document.getElementById('notificationCount').innerHTML = '';
                    }
                },
            });
    }

    /*hair diary notifications*/

    document.addEventListener('click', function (event) {
        var hairDiaryNotificationIcon = document.getElementById(""hairDiaryNotificationIcon"");
        var hairDiaryNotificationPopup = document.getElementById(""hairDiaryNotificationPopup"");
        if (hairDiaryNotificationIcon && hairDiaryNotificationPopup) {
            if (!hairDiaryNotificationIcon.contains(event.target) && !hairDiaryNotificationPopup.contains(event.target)) {
                hairDiaryNotificationPopup.style.display = ""none"";
            ");
            WriteLiteral(@"}
        }
    });

    function getHairDiaryNotificationList() {
        $('#tHairDiaryBodyNot').html('');
        $.ajax({
            type: ""GET"",
            url: ""/HairProfile/GetHairDiarySubmitNotificationList"",
            success: function (hairdiaryresponse) {
                $('#tHairDiaryBodyNot').html('');
                var noHairDiaryNotificationMessage = document.getElementById('noHairDiaryNotificationMessage');
                if (hairdiaryresponse.recordsTotal > 0) {
                    var count = hairdiaryresponse.recordsTotal
                    document.getElementById('hairDiaryNotificationCount').innerHTML = hairdiaryresponse.recordsTotal;
                    noHairDiaryNotificationMessage.style.display = 'none';
                }
                else {

                    noHairDiaryNotificationMessage.style.display = 'block';
                }
                
                for (var d in hairdiaryresponse.data) {
                    var data = hairdiaryrespo");
            WriteLiteral(@"nse.data[d];
                    $('#tHairDiaryBodyNot').append($('<tr>')
                        .append($('<td>New hair diary submitted by ' + data.userId + ' for Date: ' + data.createdDate + ' </td>'))
                        .append($('<td>').append('<a href=""javascript:;"" onclick=MarkHairDiaryAsRead(' + data.id + ') class=""link-button"" title=""Mark as read"" ><i class=""fa fa-check-circle ml-2 text-danger""></i> </a>'))
                        .append($('</tr>'))
                    )
                }

            },
            error: function (hairdiaryresponse) {

            },
            complete: function () {

            }
        });
    }

        function OpenHairDiaryNotificationModal() {
            var popup = document.getElementById(""hairDiaryNotificationPopup"");
            if (popup.style.display === ""none"" || popup.style.display === """") {
                getHairDiaryNotificationList();
                popup.style.display = ""block"";
            }
            else {");
            WriteLiteral(@"
                popup.style.display = ""none"";

            }
        }

        function stopHairDiaryPropagation(event) {
            event.stopPropagation();
        }

        function MarkHairDiaryAsRead(id, element) {
            var notification = {
                Id: id,
            }
            $('.preloader').css('display', 'block');
            $.ajax({
                type: ""POST"",
                url: ""/HairProfile/UpdateNotificationHairDiaryAsRead"",
                data: notification,
                success: function (hairdiaryresponse) {
                    if (hairdiaryresponse == ""1"") {
                        getHairDiaryNotificationCount();
                        getHairDiaryNotificationList();
                    }
                    else {

                    }

                    $('.preloader').css('display', 'none');
                },
            });
        }

        function getHairDiaryNotificationCount() {
            $.ajax({
            ");
            WriteLiteral(@"    type: ""Get"",
                url: ""/Auth/GetHairDiaryNotificationCount"",
                success: function (hairdiaryresponse) {
                    if (hairdiaryresponse > 0) {
                        document.getElementById('hairDiaryNotificationCount').innerHTML = hairdiaryresponse;
                    }
                    else {
                        document.getElementById('hairDiaryNotificationCount').innerHTML = '';
                    }
                },
            });
        }

</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
